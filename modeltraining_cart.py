# -*- coding: utf-8 -*-
"""modeltraining #CART

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yYyFYVSyTT1VDAD1zhnyhevo-Uu8H7aK
"""

import numpy as np
import pandas as pd


#CART
data=r'/content/drive/MyDrive/re-id/Data_points.xlsx'
image_path=r'/content/drive/MyDrive/re-id/137_fixed.tif'

df = pd.read_excel(data)
# print(df)

import sklearn
X_labels = ['B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7']
y_label = 'Label'

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df[X_labels], df[y_label], test_size=0.2, stratify=df['Label'], random_state=10)

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import cross_val_score, StratifiedKFold
cart=DecisionTreeClassifier(random_state=10)
skf=StratifiedKFold(n_splits=5,shuffle=True,random_state=10)

cv_scores = cross_val_score(cart, X_train, y_train, cv=skf, scoring='accuracy')

print('Accuracy score - 10foldCV - Training dataset: {}'.format(np.mean(cv_scores)))

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import StratifiedKFold,GridSearchCV
cart=DecisionTreeClassifier(random_state=10)
skf=StratifiedKFold(n_splits=5,shuffle=True,random_state=10)
param_grid= {
    'max_features':['auto','sqrt'],
    'criterion':['gini','entropy'],
    'splitter':['best','random'],
}
gridCV_clf = GridSearchCV(estimator = cart, param_grid=param_grid, cv = skf, scoring='accuracy', verbose=2)
gridCV_clf.fit(X_train, y_train)
print(gridCV_clf.best_params_)
print(gridCV_clf.best_score_)

from sklearn.tree import DecisionTreeClassifier
cart = DecisionTreeClassifier(max_features='auto', random_state=10, criterion='entropy')
cart.fit(X_train,y_train)
y_pred=cart.predict(X_test)

from sklearn.metrics import accuracy_score, confusion_matrix
print('Accuracy score - Test dataset: {}'.format(accuracy_score(y_test, y_pred)))